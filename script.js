let balance = 10;
let BR = 100;
let level = 0;
let playerID = Math.floor(Math.random()*90000 + 10000);
let referrals = {};
let lands = [true,false,false,false,false,false,false,false,false];

function showForm(type){
  document.getElementById('auth-choice-screen').style.display='none';
  if(type === 'login') document.getElementById('login-screen').style.display='flex';
  else document.getElementById('register-screen').style.display='flex';
}

function backToChoice(){
  document.getElementById('login-screen').style.display='none';
  document.getElementById('register-screen').style.display='none';
  document.getElementById('auth-choice-screen').style.display='flex';
}

function renderLevel(current, max=10){
  level = current;
  const bar = document.getElementById('level-bar');
  const progress = document.getElementById('level-progress');
  bar.innerHTML = '';
  for(let i=1;i<=max;i++){
    const s = document.createElement('span');
    s.innerText = 'üë§';
    if(i <= current) s.classList.add('active');
    bar.appendChild(s);
  }
  progress.innerText = current + ' / ' + max;
}

function updateBR(){
  document.getElementById('navbar-br').innerText = '‚öîÔ∏è BR: ' + BR.toFixed(1);
}

function login(){
  const username = document.getElementById('login-username').value || '–ò–≥—Ä–æ–∫';
  document.getElementById('navbar-username').innerText = 'üë§ ' + username;
  document.getElementById('login-screen').style.display = 'none';
  document.getElementById('main-screen').style.display = 'flex';
  renderLevel(0,10);
  updateBR();
}

function register(){
  const username = document.getElementById('reg-username').value || '–ò–≥—Ä–æ–∫';
  const alliance = document.getElementById('reg-alliance').value || '-';
  const urlParams = new URLSearchParams(window.location.search);
  const refID = urlParams.get('ref');
  if(refID){ referrals[refID] = username; }
  document.getElementById('navbar-username').innerText = 'üë§ ' + username + ' [' + alliance + ']';
  document.getElementById('register-screen').style.display = 'none';
  document.getElementById('main-screen').style.display = 'flex';
  renderLevel(0,10);
  updateBR();
}

function showContent(type){
  const contentBox = document.getElementById('content-box');
  contentBox.innerHTML = '<div id="main-text"></div>';
  const mainText = document.getElementById('main-text');

  if(type === 'palace'){
    mainText.innerHTML = `‚ÑπÔ∏è <b>–î–≤–æ—Ä–µ—Ü</b><br><br>
      üë§ –ò–º—è: ${document.getElementById("navbar-username").innerText.replace("üë§ ","")}<br>
      ü§ù –†–µ—Ñ–µ—Ä –º–∞—Å—Ç–µ—Ä: - <br>
      üí∞ –ë–∞–ª–∞–Ω—Å (TON): ${balance}<br>
      üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${new Date().toLocaleDateString()}<br>
      üÜî Telegram ID: #${playerID}<br>
      ‚öîÔ∏è BR: ${BR.toFixed(1)}`;
  }
  else if(type === 'referrals'){
    mainText.innerHTML = `üë• <b>–†–µ—Ñ–µ—Ä–∞–ª—ã</b><br><br>
      –í–∞—à ID: <input type="text" id="player-id" value="${playerID}" readonly style="width:120px;">
      <button onclick="copyReferral()">–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É</button>
      <div id="ref-list" style="margin-top:10px;"></div>`;
    updateReferralList();
  }
  else if(type === 'balance'){
    mainText.innerHTML = `üí∞ <b>–ë–∞–ª–∞–Ω—Å</b><br><br> –í–∞—à –±–∞–ª–∞–Ω—Å: ${balance} TON.`;
    const sub = document.createElement('div');
    sub.className = 'sub-buttons';
    sub.innerHTML = `<button onclick="withdraw()">–í—ã–≤–æ–¥</button><button onclick="deposit()">–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</button>`;
    contentBox.appendChild(sub);
  }
  else if(type === 'rating'){
    mainText.innerHTML = `üèÜ <b>–†–µ–π—Ç–∏–Ω–≥</b><br><br>`;
    const table = document.createElement('table');
    table.innerHTML = `<thead><tr><th>‚Ññ</th><th>–ò–º—è</th><th>–ë–æ–µ–≤–∞—è —Å–∏–ª–∞</th><th>–£—á–∞—Å—Ç–Ω–∏–∫–∏</th></tr></thead>
      <tbody>
      ${Array.from({length:10},(_,i)=>`<tr><td>${i+1}</td><td>–ò–≥—Ä–æ–∫${i+1}</td><td>${Math.floor(Math.random()*1000)+100}</td><td>${Math.floor(Math.random()*50)+1}</td></tr>`).join('')}
      </tbody>`;
    contentBox.appendChild(table);
  }
  else if(type === 'shop'){
    mainText.innerHTML = `üõí <b>–ú–∞–≥–∞–∑–∏–Ω</b><br><br>`;
    const shopDiv = document.createElement('div');
    shopDiv.className = 'sub-buttons';
    shopDiv.innerHTML = `
      <button onclick="buyItem(1,0.5,'–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –¥–≤–æ—Ä—Ü–∞')">üè∞ –£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –¥–≤–æ—Ä—Ü–∞ (1 TON ‚Üí +0.5% BR)</button>
      <button onclick="buyItem(2,1.5,'–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∞—Ä–º–∏–∏')">‚öîÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∞—Ä–º–∏–∏ (2 TON ‚Üí +1.5% BR)</button>
      <button onclick="buyItem(3,5,'–ú–∞–≥–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞')">üîÆ –ú–∞–≥–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞ (3 TON ‚Üí +5% BR)</button>
    `;
    contentBox.appendChild(shopDiv);

    const grid = document.createElement('div');
    grid.className = 'shop-grid';
    for(let i=0;i<9;i++){
      const cell = document.createElement('div');
      cell.innerText = 'üè°';
      if(lands[i]) cell.classList.add('owned');
      const ownedCount = lands.filter(x=>x).length;
      const nextCost = 5 * ownedCount;
      if(!lands[i]) cell.title = `–ö—É–ø–∏—Ç—å –∑–∞ ${nextCost} TON`;
      cell.onclick = ()=> { buyLand(i); };
      grid.appendChild(cell);
    }
    contentBox.appendChild(grid);
  }
  else if(type === 'rules'){
    mainText.innerHTML = `<b>–ü—Ä–∞–≤–∏–ª–∞</b><br><br>
      –ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –º–æ–∂–µ—Ç –≤–æ–π—Ç–∏ –≤ –∏–≥—Ä—É –±–µ—Å–ø–ª–∞—Ç–Ω–æ.<br>
      –ü—Ä–∏ –∏–≥—Ä–µ –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç —Ñ–µ–æ–¥ –≤ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ.<br>
      –ú–∞–∫—Å–∏–º—É–º 10 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ TON.<br>
      –î–ª—è –≤—ã–≤–æ–¥–∞ –Ω—É–∂–Ω–æ —Å—Ç–∞—Ç—å –±–∞—Ä–æ–Ω–æ–º - –¥–æ–Ω–∞—Ç 7 TON.<br>
      –¢–∞–∫ –∂–µ –µ—Å—Ç—å –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã–µ –ø–æ–∫—É–ø–∫–∏ –∏ NFT —Ç–æ—Ä–≥–æ–≤–ª—è.`;
  }
}

function buyItem(cost, percent, name){
  if(balance < cost){ alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ TON'); return; }
  balance -= cost;
  BR += BR * (percent/100);
  updateBR();
  alert('–ö—É–ø–ª–µ–Ω–æ: ' + name);
  showContent('shop');
}

function copyReferral(){
  const link = `${window.location.origin}${window.location.pathname}?ref=${playerID}`;
  navigator.clipboard.writeText(link).then(()=>alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä'));
}
function updateReferralList(){
  const div = document.getElementById('ref-list');
  if(!div) return;
  const keys = Object.keys(referrals);
  if(keys.length===0) div.innerText = '–ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤';
  else { div.innerHTML = '<ul>' + keys.map(k=>`<li>${k} ‚Üí ${referrals[k]}</li>`).join('') + '</ul>'; }
}

function withdraw(){ alert('–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ (–¥–µ–º–æ)'); }
function deposit(){ balance += 5; alert('–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ +5 TON'); showContent('balance'); }

function buyLand(index){
  if(lands[index]) return;
  const ownedCount = lands.filter(x=>x).length;
  const cost = 5 * ownedCount;
  if(balance < cost){ alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ TON –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∑–µ–º–ª–∏!'); return; }
  balance -= cost;
  lands[index] = true;
  alert(`–ö—É–ø–ª–µ–Ω–æ –ø–æ–ª–µ #${index+1} –∑–∞ ${cost} TON`);
  showContent('shop');
}

document.addEventListener('DOMContentLoaded', ()=>{
  const urlParams = new URLSearchParams(window.location.search);
  const refID = urlParams.get('ref');
  if(refID){
    if(referrals[refID]){ console.log('Ref param', refID, 'is known:', referrals[refID]); }
    else { console.log('Ref param present but unknown:', refID); }
  }

let energy = 100;
const maxEnergy = 100;

// –≠–Ω–µ—Ä–≥–∏—è —Ä–µ–≥–µ–Ω
setInterval(()=>{
  if(energy < maxEnergy) {
    energy++;
    updateEnergyDisplay();
  }
}, 5000);

// –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏
const palace = document.querySelector('.emoji-circle');
const energyDisplay = document.createElement('div');
energyDisplay.id = 'energy-display';
energyDisplay.innerText = `‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${energy}`;
palace.appendChild(energyDisplay);

function updateEnergyDisplay(){
  energyDisplay.innerText = `‚ö° –≠–Ω–µ—Ä–≥–∏—è: ${energy}`;
}

// –§—É–Ω–∫—Ü–∏—è —Ç–∞–ø–∞ –ø–æ –¥–≤–æ—Ä—Ü—É
palace.addEventListener('click', ()=>{
  if(energy < 2) { alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏!'); return; }
  energy -= 2;
  BR += 0.05;
  updateEnergyDisplay();
  updateBR();
  showSwordAnimation();
});

// –ê–Ω–∏–º–∞—Ü–∏—è –º–µ—á–µ–π
function showSwordAnimation(){
  const sword = document.createElement('div');
  sword.className = 'sword-tap';
  sword.innerText = '‚öîÔ∏è';
  sword.style.left = (50 + (Math.random()*40-20)) + '%'; // –Ω–µ–º–Ω–æ–≥–æ —Ä–∞–Ω–¥–æ–º–∏–º –ø–æ–∑–∏—Ü–∏—é
  palace.appendChild(sword);
  setTimeout(()=>{ sword.remove(); }, 800);
}

});

